trigger:
  branches:
    include:
    - master
  tags:
    include:
    - v*
pr:
  - '*'

pool:
  name: Azure-VSTS-VS2017
  demands:
  - DotNetFramework
  - vstest

variables:
  - group: Saucelabs
  - group: vh domains and urls
  - group: vh test users
  - name: Authority
    value: https://login.microsoftonline.com/$(TenantId)
  - name: ClientId
    value: $(vh-service-web-appid)
  - name: ClientSecret
    value: $(vh-service-web-key)
  - name: current_web_url
    value: $(service_web_url)
  - name: environment
    value: test2
  - name: keyvault
    value: 'vhcoreinfraht$(environment)'
  - name: ReadKeyVaultSecrets
    value: 'TenantId, vh-service-web-appid, vh-service-web-key'
  - name: subscription
    value: 'Reform-CFT-VH-Dev'

steps:
- task: gittools.gitversion.gitversion-task.GitVersion@5
  displayName: GitVersion

- task: UseDotNet@2
  displayName: 'Install latest dotnet'
  inputs:
    version: 2.x

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: '**/*.csproj'
    vstsFeed: '3f69a23d-fbc7-4541-afc7-4cccefcad773/e48b2732-376c-4052-ba97-b28783c9bab5'
    verbosityRestore: Minimal

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    projects: '**/*.csproj'
    arguments: '-o $(Build.ArtifactStagingDirectory)\ '

- task: AzureKeyVault@1
  displayName: 'Get Secrets'
  inputs:
    azureSubscription: '$(subscription)'
    KeyVaultName: '$(keyvault)'
    SecretsFilter: '$(ReadKeyVaultSecrets)'

- task: sergeyzwezdin.magic-chunks.magic.chunks.MagicChunks@2
  displayName: 'Config transform'
  inputs:
    sourcePath: '$(Build.ArtifactStagingDirectory)/appsettings.json'
    fileType: Json
    transformations: |
     {
       "AzureAd/Authority": "$(Authority)",
       "AzureAd/ClientId": "$(ClientId)",
       "AzureAd/ClientSecret": "$(ClientSecret)",
       "AzureAd/RedirectUri": "$(current_web_url)",
       "BaseVideoUrl": "$(video_blob_url)",
       "Saucelabs/AccessKey": "$(Saucelabs:AccessKey)",
       "Saucelabs/Username": "$(Saucelabs:Username)",
       "TestUserSecrets/Individual": "$(TestUserSecrets:Individual)",
       "TestUserSecrets/Password": "$(TestUserSecrets:Password)",
       "TestUserSecrets/Person": "$(TestUserSecrets:Person)",
       "TestUserSecrets/Representative": "$(TestUserSecrets:Representative)",
       "TestUserSecrets/TestUserPassword": "$(TestUserSecrets:TestUserPassword)",
       "TestUserSecrets/TestUsernameStem": "$(TestUserSecrets:TestUsernameStem)",
       "VhServices/BookingsApiResourceId": "$(bookings_api_url)",
       "VhServices/BookingsApiUrl": "$(bookings_api_url)",
       "WebsiteUrl": "$(current_web_url)"
     }

- task: VSTest@2
  displayName: 'VsTest - testAssemblies'
  inputs:
    searchFolder: '$(Build.ArtifactStagingDirectory)'
    testFiltercriteria: 'TestCategory!=Local'
    uiTests: true
    runInParallel: true
    codeCoverageEnabled: true
    rerunFailedTests: false

- task: DotNetCoreCLI@2
  displayName: 'dotnet push'
  inputs:
    command: push
    publishVstsFeed: '3f69a23d-fbc7-4541-afc7-4cccefcad773/e48b2732-376c-4052-ba97-b28783c9bab5'
